server:
  port: 9527
spring:
  application:
    name: gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true   #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: provider-payment #payment_routh    #路由的ID，没有固定规则但要求唯一，简易配合服务名
          #uri: http://localhost:8001         #匹配后提供服务的路由地址
          uri: lb://provider-payment   #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/**         #断言，路径相匹配的进行路由

        - id: customer-order #payment_routh   #路由的ID，没有固定规则但要求唯一，简易配合服务名
          #uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://pcustomer-order   #匹配后提供服务的路由地址
          predicates:
            - Path=/order/**             #断言，路径相匹配的进行路由
            #- After=2020-03-15T15:35:07.412+08:00[GMT+08:00]   #在指定时间之后才能访问
            #- Cookie=user,admin    #需要携带Cookie并且Cookie中的user属性的值必须是admin
            #- Header=X-Request-Id, \d+   #请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Host=***123.com   #访问者必须添加Host属性，且值必须满为指定的值（*为通配符）
            #- Method=GET         #必须是get请求
            #- Query=username, \d+ #要有参数名username并且值还要是整数才能路由
          filters:
            - name: RequestRateLimiter
              args:
                #限流规则
                key-resolver: '#{@uriKeyResolver}' #此处的值为ResolverConfig类中的方法名（也就是创建的bean名）
                #每秒填充速率
                redis-rate-limiter.replenishRate: 1
                #令牌桶最大数量
                redis-rate-limiter.burstCapacity: 3
  #使用redis限流
  redis:
    host: localhost
    port: 6379
    database: 0
eureka:
  instance:
    hostname: gateway
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:7001/eureka